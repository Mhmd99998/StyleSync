-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."__EFMigrationsHistory"
(
    "MigrationId" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "ProductVersion" character varying(32) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

CREATE TABLE IF NOT EXISTS public.cart_events
(
    event_id uuid NOT NULL,
    user_id uuid NOT NULL,
    variant_id uuid NOT NULL,
    quantity integer NOT NULL DEFAULT 1,
    created_at timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT cart_events_pkey PRIMARY KEY (event_id)
);

CREATE TABLE IF NOT EXISTS public.cart_items
(
    cart_item_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    cart_id uuid NOT NULL,
    variant_id uuid NOT NULL,
    quantity integer NOT NULL DEFAULT 1,
    CONSTRAINT cart_items_pkey PRIMARY KEY (cart_item_id)
);

CREATE TABLE IF NOT EXISTS public.carts
(
    cart_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id uuid,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT carts_pkey PRIMARY KEY (cart_id),
    CONSTRAINT carts_user_id_key UNIQUE (user_id)
);

CREATE TABLE IF NOT EXISTS public.categories
(
    category_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT categories_pkey PRIMARY KEY (category_id),
    CONSTRAINT categories_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.images
(
    image_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    variant_id uuid,
    image_url character varying(255) COLLATE pg_catalog."default" NOT NULL,
    is_default boolean DEFAULT false,
    CONSTRAINT images_pkey PRIMARY KEY (image_id)
);

CREATE TABLE IF NOT EXISTS public.order_items
(
    order_item_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    order_id uuid,
    variant_id uuid,
    quantity integer NOT NULL,
    price_at_purchase numeric(10, 2) NOT NULL,
    CONSTRAINT order_items_pkey PRIMARY KEY (order_item_id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    order_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id uuid,
    payment_intent_id character varying(255) COLLATE pg_catalog."default",
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'pending'::character varying,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    shipping_address text COLLATE pg_catalog."default",
    CONSTRAINT orders_pkey PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.product_categories
(
    product_id uuid NOT NULL,
    category_id uuid NOT NULL,
    CONSTRAINT product_categories_pkey PRIMARY KEY (product_id, category_id)
);

CREATE TABLE IF NOT EXISTS public.product_stock_notifications
(
    notification_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    variant_id uuid,
    user_email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    notified boolean DEFAULT false,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT product_stock_notifications_pkey PRIMARY KEY (notification_id)
);

CREATE TABLE IF NOT EXISTS public.product_variants
(
    variant_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    product_id uuid NOT NULL,
    size character varying(50) COLLATE pg_catalog."default" NOT NULL,
    color character varying(50) COLLATE pg_catalog."default" NOT NULL,
    price numeric(10, 2) NOT NULL,
    stock integer NOT NULL DEFAULT 0,
    sku character varying(100) COLLATE pg_catalog."default",
    bought_at numeric(10, 2) NOT NULL,
    min_stock integer NOT NULL DEFAULT 0,
    on_sale numeric(10, 2) DEFAULT 0,
    CONSTRAINT product_variants_pkey PRIMARY KEY (variant_id)
);

CREATE TABLE IF NOT EXISTS public.products
(
    product_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    is_archived boolean DEFAULT false,
    sku character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT products_pkey PRIMARY KEY (product_id),
    CONSTRAINT products_sku_key UNIQUE (sku)
);

CREATE TABLE IF NOT EXISTS public.users
(
    user_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(100) COLLATE pg_catalog."default",
    last_name character varying(100) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    is_email_verified boolean DEFAULT false,
    role character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT 'customer'::character varying,
    CONSTRAINT users_pkey PRIMARY KEY (user_id),
    CONSTRAINT users_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.wishlist_items
(
    wishlist_item_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id uuid NOT NULL,
    product_id uuid NOT NULL,
    added_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT wishlist_items_pkey PRIMARY KEY (wishlist_item_id)
);

ALTER TABLE IF EXISTS public.cart_events
    ADD CONSTRAINT cart_events_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.cart_events
    ADD CONSTRAINT cart_events_variant_id_fkey FOREIGN KEY (variant_id)
    REFERENCES public.product_variants (variant_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.cart_items
    ADD CONSTRAINT cart_items_cart_id_fkey FOREIGN KEY (cart_id)
    REFERENCES public.carts (cart_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS ix_cart_items_cart_id
    ON public.cart_items(cart_id);


ALTER TABLE IF EXISTS public.cart_items
    ADD CONSTRAINT cart_items_variant_id_fkey FOREIGN KEY (variant_id)
    REFERENCES public.product_variants (variant_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS ix_cart_items_variant_id
    ON public.cart_items(variant_id);


ALTER TABLE IF EXISTS public.carts
    ADD CONSTRAINT carts_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS carts_user_id_key
    ON public.carts(user_id);


ALTER TABLE IF EXISTS public.images
    ADD CONSTRAINT images_variant_id_fkey FOREIGN KEY (variant_id)
    REFERENCES public.product_variants (variant_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.order_items
    ADD CONSTRAINT order_items_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS ix_order_items_order_id
    ON public.order_items(order_id);


ALTER TABLE IF EXISTS public.order_items
    ADD CONSTRAINT order_items_variant_id_fkey FOREIGN KEY (variant_id)
    REFERENCES public.product_variants (variant_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS ix_order_items_variant_id
    ON public.order_items(variant_id);


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS ix_orders_user_id
    ON public.orders(user_id);


ALTER TABLE IF EXISTS public.product_categories
    ADD CONSTRAINT product_categories_category_id_fkey FOREIGN KEY (category_id)
    REFERENCES public.categories (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS ix_product_categories_category_id
    ON public.product_categories(category_id);


ALTER TABLE IF EXISTS public.product_categories
    ADD CONSTRAINT product_categories_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.product_stock_notifications
    ADD CONSTRAINT product_stock_notifications_variant_id_fkey FOREIGN KEY (variant_id)
    REFERENCES public.product_variants (variant_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.product_variants
    ADD CONSTRAINT product_variants_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS ix_product_variants_product_id
    ON public.product_variants(product_id);


ALTER TABLE IF EXISTS public.wishlist_items
    ADD CONSTRAINT wishlist_items_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.wishlist_items
    ADD CONSTRAINT wishlist_items_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS ix_wishlist_items_user_id
    ON public.wishlist_items(user_id);

-- Buyers table (wholesalers)
CREATE TABLE IF NOT EXISTS public.buyers (
    buyer_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    name character varying(255) NOT NULL,
    location text,
    email character varying(255), -- Optional, for contact
    phone_number character varying(20), -- Optional, for contact
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    balance numeric(10, 2) NOT NULL DEFAULT 0,
    CONSTRAINT buyers_pkey PRIMARY KEY (buyer_id),
    CONSTRAINT buyers_email_key UNIQUE (email)
);

-- Receipts table (belongs to a buyer)
CREATE TABLE IF NOT EXISTS public.receipts (
    receipt_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    buyer_id uuid NOT NULL,
    total_amount numeric(10, 2) NOT NULL CHECK (total_amount >= 0),
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    note text, -- Optional notes field
    CONSTRAINT receipts_pkey PRIMARY KEY (receipt_id),
    CONSTRAINT receipts_buyer_id_fkey FOREIGN KEY (buyer_id)
        REFERENCES public.buyers (buyer_id) MATCH SIMPLE
        ON UPDATE NO ACTION ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS ix_receipts_buyer_id ON public.receipts(buyer_id);

-- Receipt Items table (many-to-one with receipts)
CREATE TABLE IF NOT EXISTS public.receipt_items (
    receipt_item_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    receipt_id uuid NOT NULL,
    variant_id uuid NOT NULL,
    quantity integer NOT NULL CHECK (quantity > 0),
    selling_price numeric(10, 2) NOT NULL CHECK (selling_price >= 0),
    line_total numeric(10, 2) GENERATED ALWAYS AS (quantity * selling_price) STORED,
    CONSTRAINT receipt_items_pkey PRIMARY KEY (receipt_item_id),
    CONSTRAINT receipt_items_receipt_id_fkey FOREIGN KEY (receipt_id)
        REFERENCES public.receipts (receipt_id) MATCH SIMPLE
        ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT receipt_items_variant_id_fkey FOREIGN KEY (variant_id)
        REFERENCES public.product_variants (variant_id) MATCH SIMPLE
        ON UPDATE NO ACTION ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS ix_receipt_items_receipt_id ON public.receipt_items(receipt_id);
CREATE INDEX IF NOT EXISTS ix_receipt_items_variant_id ON public.receipt_items(variant_id);

END;